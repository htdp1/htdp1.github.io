(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{350:function(e,s,t){e.exports=t.p+"assets/img/ebs-console-view.ce33dedd.png"},369:function(e,s,t){"use strict";t.r(s);var a=t(40),n=Object(a.a)({},(function(){var e=this,s=e.$createElement,a=e._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"amazon-ebs"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#amazon-ebs"}},[e._v("#")]),e._v(" Amazon EBS")]),e._v(" "),a("ul",[a("li",[e._v("Amazon Elastic Block Store(Amazon EBS)는 EC2 인스턴스에 사용할 수 있는 블록 수준 스토리지 볼륨을 제공")]),e._v(" "),a("li",[e._v("Amazon EKS에서 Container Volume으로 활용"),a("br"),e._v(" "),a("a",{attrs:{href:"https://docs.aws.amazon.com/ko_kr/AWSEC2/latest/UserGuide/AmazonEBS.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://docs.aws.amazon.com/ko_kr/AWSEC2/latest/UserGuide/AmazonEBS.html"),a("OutboundLink")],1)])]),e._v(" "),a("h2",{attrs:{id:"deploy-ebs-csi-driver"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#deploy-ebs-csi-driver"}},[e._v("#")]),e._v(" Deploy EBS CSI Driver")]),e._v(" "),a("ul",[a("li",[a("p",[e._v("EBS Container Storage Interface")])]),e._v(" "),a("li",[a("p",[e._v("Amazon EBS Volume의 수명 주기 관리를 허용하도록 하는 Interface")])]),e._v(" "),a("li",[a("p",[e._v("Persistent Volume 에 Amazon EBS 를 활용하기 위하여 배포")])]),e._v(" "),a("li",[a("p",[e._v("CSI Driver Deploy Manual"),a("br"),e._v(" "),a("a",{attrs:{href:"https://docs.aws.amazon.com/ko_kr/eks/latest/userguide/ebs-csi.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://docs.aws.amazon.com/ko_kr/eks/latest/userguide/ebs-csi.html"),a("OutboundLink")],1),a("br"),e._v("\n| "),a("small",[e._v("NOTE : "),a("em",[e._v("oidc key 입력 시, domain region 설정 주의.")])])])])]),e._v(" "),a("hr"),e._v(" "),a("ul",[a("li",[e._v("배포 내역")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("$ kubectl get deploy -n kube-system | grep ebs\nebs-csi-controller             2/2     2            2           18d\n\n$ kubectl get daemonset -n kube-system | grep ebs\nebs-csi-node   2         2         2       2            2           kubernetes.io/os=linux                            18d\n\n$ kubectl get po -n kube-system | grep ebs\nebs-csi-controller-6cbd957db7-6d4x6             4/4     Running   0          33m\nebs-csi-controller-6cbd957db7-hzl96             4/4     Running   0          5d21h\nebs-csi-node-bdmts                              3/3     Running   0          2d5h\nebs-csi-node-gd9zz                              3/3     Running   0          8d\n")])])]),a("ul",[a("li",[e._v("EBS CSI Driver Github Repository 참조"),a("br"),e._v(" "),a("a",{attrs:{href:"https://github.com/kubernetes-sigs/aws-ebs-csi-driver",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://github.com/kubernetes-sigs/aws-ebs-csi-driver"),a("OutboundLink")],1)])]),e._v(" "),a("h2",{attrs:{id:"create-volume-on-container"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#create-volume-on-container"}},[e._v("#")]),e._v(" Create Volume on Container")]),e._v(" "),a("ul",[a("li",[e._v("StorageClass YAML 설정 및 생성\n"),a("ul",[a("li",[e._v("EBS는 WaitForFirstConsumer 바인딩 모드를 지원")]),e._v(" "),a("li",[e._v("PersistentVolumeClaim 를 사용하는 Pod 생성 시점까지, Volume 바인딩과 프로비저닝을 지연"),a("br"),e._v(" "),a("a",{attrs:{href:"https://kubernetes.io/ko/docs/concepts/storage/storage-classes/#%EB%B3%BC%EB%A5%A8-%EB%B0%94%EC%9D%B8%EB%94%A9-%EB%AA%A8%EB%93%9C",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://kubernetes.io/ko/docs/concepts/storage/storage-classes/#볼륨-바인딩-모드"),a("OutboundLink")],1)])])])]),e._v(" "),a("div",{staticClass:"language-yml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("kind")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" StorageClass\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("apiVersion")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" storage.k8s.io/v1\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("metadata")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" <sc name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(">")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("provisioner")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" ebs.csi.aws.com\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("volumeBindingMode")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" WaitForFirstConsumer\n")])])]),a("ul",[a("li",[e._v("PersistentVolumeClaim YAML 설정 및 생성\n"),a("ul",[a("li",[e._v("accessMode는 ReadWriteOnce로 지정"),a("br"),e._v("\n: 일반적인 용도의 EBS Volume은 여러 Instance에 Multi Attach가 불가능"),a("br"),e._v(" "),a("a",{attrs:{href:"https://kubernetes.io/ko/docs/concepts/storage/persistent-volumes/#%EC%A0%91%EA%B7%BC-%EB%AA%A8%EB%93%9C",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://kubernetes.io/ko/docs/concepts/storage/persistent-volumes/#접근-모드"),a("OutboundLink")],1)])])])]),e._v(" "),a("div",{staticClass:"language-yml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("apiVersion")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" v1\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("kind")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" PersistentVolumeClaim\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("metadata")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("namespace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" <namespace name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(">")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" <pvc name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(">")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("spec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("accessModes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v(" ReadWriteOnce\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("storageClassName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" <sc name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(">")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("resources")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("requests")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("storage")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" <request size"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(">")]),e._v("\n")])])]),a("ul",[a("li",[e._v("pvc 사용하는 pod 최초 생성시, PersistentVolume Bound")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("$ kubectl get pvc -n session-dev | grep redis\nredis-cache           Bound    pvc-c7ac4781-948d-4f9e-8050-f72406b25753   4Gi        RWO            ebs-sc         18d\nredis-session         Bound    pvc-0f1bfdee-e631-4368-83e6-f9d47435dbcb   4Gi        RWO            ebs-sc         18d\n\n$ kubectl get pv -n session-dev | grep redis\npvc-0f1bfdee-e631-4368-83e6-f9d47435dbcb   4Gi        RWO            Delete           Bound    session-dev/redis-session            ebs-sc                  18d\npvc-c7ac4781-948d-4f9e-8050-f72406b25753   4Gi        RWO            Delete           Bound    session-dev/redis-cache              ebs-sc                  18d\n")])])]),a("ul",[a("li",[e._v("EKS Cluster에 pvc / pv 생성 후, EBS Volume 자동 생성\n"),a("ul",[a("li",[e._v("AWS Console에서 EBS Volume 확인"),a("br"),e._v(" "),a("img",{attrs:{src:t(350),alt:""}})])])])])])}),[],!1,null,null,null);s.default=n.exports}}]);