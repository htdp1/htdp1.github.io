(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{349:function(t,a,s){t.exports=s.p+"assets/img/alb-console-view.6e331d0d.png"},368:function(t,a,s){"use strict";s.r(a);var e=s(40),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"amazon-elb"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#amazon-elb"}},[t._v("#")]),t._v(" Amazon ELB")]),t._v(" "),e("h2",{attrs:{id:"application-load-balancer"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#application-load-balancer"}},[t._v("#")]),t._v(" Application Load Balancer")]),t._v(" "),e("ul",[e("li",[t._v("AWS opensource blog")])]),t._v(" "),e("blockquote",[e("p",[e("a",{attrs:{href:"https://aws.amazon.com/ko/blogs/opensource/kubernetes-ingress-aws-alb-ingress-controller/",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://aws.amazon.com/ko/blogs/opensource/kubernetes-ingress-aws-alb-ingress-controller/"),e("OutboundLink")],1)])]),t._v(" "),e("p",[e("img",{attrs:{src:"https://d2908q01vomqb2.cloudfront.net/ca3512f4dfa95a03169c5a670a4c91a19b3077b4/2018/11/20/image1-1.png",width:"800px",height:"550px",title:"px(픽셀) 크기 설정",alt:"RubberDuck"}}),e("br")]),t._v(" "),e("h3",{attrs:{id:"ingress-생성"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ingress-생성"}},[t._v("#")]),t._v(" Ingress 생성")]),t._v(" "),e("h4",{attrs:{id:"위-다이어그램에서-번호가-매겨진-파란색-원의-단계를-따릅니다"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#위-다이어그램에서-번호가-매겨진-파란색-원의-단계를-따릅니다"}},[t._v("#")]),t._v(" 위 다이어그램에서 번호가 매겨진 파란색 원의 단계를 따릅니다.")]),t._v(" "),e("ol",[e("li",[t._v("컨트롤러는 API 서버의 Ingress 이벤트를 감시합니다. 요구 사항을 충족하는 Ingress 리소스를 찾으면 AWS 리소스 생성을 시작합니다.")]),t._v(" "),e("li",[t._v("Ingress 리소스에 대한 ALB가 생성됩니다.")]),t._v(" "),e("li",[t._v("Ingress 리소스에 지정된 각 백엔드에 대해 TargetGroup 이 생성됩니다.")]),t._v(" "),e("li",[t._v("수신 리소스 주석으로 지정된 모든 포트에 대해 리스너가 생성됩니다. 포트를 지정하지 않으면 적절한 기본값 (80또는 443)이 사용됩니다.")]),t._v(" "),e("li",[t._v("Ingress 리소스에 지정된 각 경로에 대해 규칙이 생성됩니다. 이렇게 하면 특정 경로에 대한 트래픽이 TargetGroup 생성된 올바른 경로로 라우팅 됩니다.")])]),t._v(" "),e("h2",{attrs:{id:"deploy-alb-controller"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#deploy-alb-controller"}},[t._v("#")]),t._v(" Deploy ALB Controller")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("AWS Load Balancer Controller는 EKS Cluster에 대한 AWS Elastic Load Balancer를 관리함"),e("br"),t._v(" "),e("a",{attrs:{href:"https://docs.aws.amazon.com/ko_kr/eks/latest/userguide/aws-load-balancer-controller.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://docs.aws.amazon.com/ko_kr/eks/latest/userguide/aws-load-balancer-controller.html"),e("OutboundLink")],1)])]),t._v(" "),e("li",[e("p",[t._v("Ingress가 L7에서 Balancing 되는 Application Load Balancer로 생성됨"),e("br"),t._v(" "),e("a",{attrs:{href:"https://docs.aws.amazon.com/ko_kr/eks/latest/userguide/alb-ingress.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://docs.aws.amazon.com/ko_kr/eks/latest/userguide/alb-ingress.html"),e("OutboundLink")],1)])]),t._v(" "),e("li",[e("p",[t._v("Kubernetes manifest 활용하여 생성 (helm 아님)")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("v2_1_0_full.yaml 참조"),e("br"),t._v(" "),e("a",{attrs:{href:"https://github.com/htdp1/md-repository/blob/main/create-alb/v2_1_0_full.yaml",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/htdp1/md-repository/blob/main/create-alb/v2_1_0_full.yaml"),e("OutboundLink")],1)]),t._v(" "),e("ul",[e("li",[t._v("ServiceAccount Section 삭제")]),t._v(" "),e("li",[t._v("Deployment 섹션에서 spec 값을 --cluster-name 을 Amazon EKS Cluster name 으로 수정")])])])])]),t._v(" "),e("li",[e("p",[t._v("배포 내역")])])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("$ kubectl get deploy -n kube-system | grep load-balancer\naws-load-balancer-controller   1/1     1            1           27d\n\n $ kubectl get po -n kube-system | grep load-balancer\naws-load-balancer-controller-67b465c774-lwc22   1/1     Running   0          42m\n")])])]),e("h2",{attrs:{id:"create-ingress-on-eks-cluster"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#create-ingress-on-eks-cluster"}},[t._v("#")]),t._v(" Create Ingress on EKS Cluster")]),t._v(" "),e("ul",[e("li",[t._v("Ingress YAML 설정 및 생성\n"),e("ul",[e("li",[t._v("kubernetes.io/ingress.class"),e("br"),t._v("\n: alb / nlb / clb 등으로 설정 가능하며, L7 Application ELB 로 생성하기 위하여 alb로 설정")]),t._v(" "),e("li",[t._v("alb.ingress.kubernetes.io/subnets")]),t._v(" "),e("li",[t._v("alb.ingress.kubernetes.io/security-groups"),e("br"),t._v("\n: load balancer가 생성될 subnet, security group 등을 지정"),e("br"),t._v("\n: eks cluster가 배포되는 모든 subnet 을 지정해주어야 함")]),t._v(" "),e("li",[t._v("alb.ingress.kubernetes.io/group.name"),e("br"),t._v("\n: 각 ingress에 동일한 group name을 지정하여, 동일한 Load Balancer로 트래픽을 처리하도록 지정 가능")])])])]),t._v(" "),e("div",{staticClass:"language-yml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" extensions/v1beta1\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Ingress\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" <app name"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("annotations")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kubernetes.io/ingress.class")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" alb\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("alb.ingress.kubernetes.io/scheme")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" internet"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("facing\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("alb.ingress.kubernetes.io/target-type")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ip\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 설정 필요")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("alb.ingress.kubernetes.io/subnets")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" <subnet"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("id"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("01"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" <subnet"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("id"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("02"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("alb.ingress.kubernetes.io/security-groups")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" <security group id"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("alb.ingress.kubernetes.io/group.name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" <group name"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("rules")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("http")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("paths")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("path")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" /*\n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("backend")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("serviceName")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" <app name"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n          "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("servicePort")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" <port"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n")])])]),e("ul",[e("li",[t._v("EKS Cluster에 Ingress 생성 후, ALB Controller 에 의해 Application Load Balancer 자동 생성\n"),e("ul",[e("li",[t._v("AWS Console에서 Elastic Load Balancer 확인"),e("br"),t._v(" "),e("img",{attrs:{src:s(349),alt:""}})])])])])])}),[],!1,null,null,null);a.default=n.exports}}]);